<%- include("partials/header.ejs") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f8f9fa;
        margin: 0;
        padding: 0;
    }
    .container {
        width: 80%;
        margin: 50px auto;
        background: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        margin-left: 238px;
    }
    h2 {
        color: #333;
        text-align: center;
    }
    .top-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }
    .search-bar {
        padding: 8px;
        width: 180px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
    .add-btn {
        background: #28a745;
        color: white;
        padding: 8px 12px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
    table {
        width: 100%;
        border-collapse: collapse;
    }
    th, td {
        border: 1px solid #ddd;
        padding: 10px;
        text-align: left;
    }
    th {
        background-color: #007bff;
        color: white;
    }
    .actions {
        display: flex;
        justify-content: center;
        gap: 10px;
    }
    .action-btn {
        padding: 6px 12px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        color: white;
        font-size: 14px;
    }
    .block { background: #dc3545; }
    .edit { background: #007bff; }
    .delete { background: #dc3545; }

    /* Modal Styles */


.modal {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 30%; /* Reduced width for vertical shape */
    max-height: 80vh; /* Set a maximum height */
    overflow-y: auto; /* Enable scrolling if needed */
    background: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
}

al-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-bottom: 10px;
        border-bottom: 1px solid #ddd;
    }
    .modal-header h3 {
        margin: 0;
    }
    .close-btn {
        cursor: pointer;
        font-size: 18px;
        background: none;
        border: none;
    }
    .form-group {
        margin-bottom: 10px;
    }
    .form-group label {
        display: block;
        font-weight: bold;
    }
    .form-group input {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
    .submit-btn {
        background: #007bff;
        color: white;
        padding: 10px;
        width: 100%;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin-top: 10px;
    }.view {
    background: #17a2b8;
    color: white;
    padding: 6px 12px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
}
.view:hover {
    background: #138496;
}  .form-group select {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: white;
    }

</style>
</head>
<body>
    <div class="container">
        <div class="top-bar">
            <input type="text" class="search-bar" placeholder="Search products...">
            <button class="add-btn" onclick="openModal()">+ Add Product</button>
        </div>
        <h2>Product Management</h2>
        <table>
            <thead>
                <tr>
                    <th>Image</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Brand</th>
                    <th>Category</th>
                    <th>Regular Price</th>
                    <th>Sale Price</th>
                    <th>Product Offer</th>
                    <th>Quantity</th>
                    <th>varient</th> 
                    <th>Status</th>
                    <th>Actions</th>

                </tr>
            </thead>
            <tbody>
                <% products.forEach(product => { %>
                    <tr>
                        <td>
                            <% if (product.images && product.images.length > 0) { %>
                                <img src="<%= product.images[0] %>" width="40" alt="<%= product.name %>">
                            <% } else { %>
                                <img src="/default-product.jpg" width="40" alt="No image">
                            <% } %>
                        </td>
                        <td><%= product.name %></td>
                        <td><%= product.description %></td>
                        <td><%= product.brandDetails[0].brandName %></td>
                        <td><%= product.categoryDetails[0].name %></td>
                        <td>$<%= product.regularPrice %></td>
                        <td>$<%= product.salePrice || '-' %></td>
                        <td><%= product.productOffer || '-' %></td>
                        <td><%= product.quantity %></td>
                        <td>
                            <button class="view" data-id="<%= product._id %>">View</button>
                        </td>
                        <td><%= product.isBlocked ? 'Blocked' : 'Active' %></td>
                        <td>
                            <div class="actions">
                                <button class="action-btn edit" data-id="<%= product._id %>" onclick="editfun('<%= product.name %>','<%= product.description %>','<%= product.brand %>',
                                    '<%= product.category %>','<%= product.regularPrice %>','<%= product.salePrice%>','<%= product.quantity%>','<%=product.images%>')">Edit</button>
                                <button class="action-btn block" data-id="<%= product._id %>">
                                    <%= product.isBlocked ? 'Unblock' : 'Block' %>
                                </button>
                                <button class="action-btn delete" data-id="<%= product._id %>">Delete</button>
                            </div>
                        </td>
                    </tr>
                <% }); %>
                <% if (!products || products.length === 0) { %>
                    <tr>
                        <td colspan="12" style="text-align: center;">No products found</td>
                    </tr>
                <% } %>
            </tbody>
        </table>
    </div>

    <!-- Add Product Modal -->
    



    <!-- Add Product Modal -->
    <div id="addProductModal" class="modal">
        <div class="modal-header">
            <h3 style="color: #dc3545; font-style:oblique;">Add New Product</h3>
            <button class="close-btn" onclick="closeModal()">âœ–</button>
        </div>
        <form id="addProductForm" action="/admin/products" method="POST" enctype="multipart/form-data">
            <div class="form-group">
                <label>Product Name</label>
                <input type="text" name="productName" required>
            </div>
            <div class="form-group">
                <label>Description</label>
                <input type="text" name="description" required>
            </div>
            <div class="form-group">
                <label>Brand</label>
                <select name="brand" required>
                    <option value="">select brand</option>
                    <% brands.forEach(element=>{ %>
                        <% if(element.isBlocked==false) { %>
                           <option value="<%= element._id%>"><%= element.
                             brandName %></option>
                             <% } %> 
       
                  <%  }) %>

                </select>
            </div>
          
            <div class="form-group">
                <label>Category</label>
                <select name="category" required>
                    <option value="">Select a category</option>
                    <% categories.forEach(element => { %>
                        <% if(element.isListed) { %>
                            <option value="<%= element._id %>" ><%= element.name %></option>
                        <% } %>
                    <% }); %>
                </select>
            </div>
           
            <div class="form-group">
                <label>Regular Price</label>
                <input type="number" name="regularPrice" required>
            </div>
            <div class="form-group">
                <label>Sale Price</label>
                <input type="number" name="salePrice">
            </div>
            <div class="form-group">
                <label>Quantity</label>
                <input type="number" name="quantity" required>
            </div>
            <div class="form-group">
                <label>Product Image</label>
                <input type="file" name="images" multiple accept="image/*" required>
            </div>
            <div class="form-group">
                <label>Product Image</label>
                <input type="file" name="images" multiple accept="image/*" required>
            </div>
            <div class="form-group">
                <label>Product Image</label>
                <input type="file" name="images" multiple accept="image/*" required>
            </div>
            <div class="form-group">
                <label>Product Image</label>
                <input type="file" name="images" multiple accept="image/*" required>
            </div>
            <button type="submit" class="submit-btn">Add Product</button>
        </form>
    </div>

</div>
           

   
    <div id="EditProductModal" class="modal">
        <div class="modal-header">
            <h3 style="color: #dc3545; font-style:oblique;">Add New Product</h3>
            <button class="close-btn" onclick="closeModal()">âœ–</button>
        </div>
        <form id="EditProductModal" action="/admin/products" method="POST" enctype="multipart/form-data">
            <div class="form-group">
                <label>Product Name</label>
                <input type="text" id="productname" name="productName" required>
            </div>
            <div class="form-group">
                <label>Description</label>
                <input type="text" id="productdescribtion" name="description" required>
            </div>
            <div class="form-group">
                <label>Brand</label>
                <select name="brand" id="productbrand" required>
                    <option value="">select brand</option>
                    <% brands.forEach(element=>{ %>
                        <% if(element.isBlocked==false) { %>
                           <option value="<%= element._id%>"><%= element.
                             brandName %></option>
                             <% } %> 
       
                  <%  }) %>

                </select>
            </div>
           
            <div class="form-group">
                <label>Category</label>
                <select name="category" id="productcategory" required>
                    <option value="">Select a category</option>
                    <% categories.forEach(element => { %>
                        <% if(element.isListed) { %>
                            <option value="<%= element._id %>" ><%= element.name %></option>
                        <% } %>
                    <% }); %>
                </select>
            </div>
            
            <div class="form-group">
                <label>Regular Price</label>
                <input type="number" id="productRegulatPrice" name="regularPrice" required>
            </div>
            <div class="form-group">
                <label>Sale Price</label>
                <input type="number" id="productSalePrice" name="salePrice">
            </div>
            <div class="form-group">
                <label>Quantity</label>
                <input type="number" id="productQuantity" name="quantity" required>
            </div>
            <div class="form-group">
                <label>Product Image</label>
                <input type="file" name="images" id="productimage1" accept="image/*" >
            </div>
            <div class="form-group">
                <label>Product Image</label>
                <input type="file" name="images" id="productimage2" multiple accept="image/*" >
            </div>
            <div class="form-group">
                <label>Product Image</label>
                <input type="file" name="images" id="productimage3" multiple accept="image/*" >
            </div>
            <div class="form-group">
                <label>Product Image</label>
                <input type="file" name="images" id="productimage4" multiple accept="image/*" >
            </div>
            <button type="submit" class="submit-btn">Add Product</button>
        </form>
    </div>
    

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            
            document.querySelectorAll('.delete').forEach(button => {
                button.addEventListener('click', async function() {
                    const productId = this.dataset.id;
                    console.log('Deleting product:', productId); 
    
                    if (!productId) {
                        console.error('No product ID found');
                        return;
                    }
    
                    if (await Swal.fire({
                        title: 'Are you sure?',
                        text: 'Do you want to delete this product?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Yes, delete it!'
                    }).then(result => result.isConfirmed)) {
                        try {
                            const response = await fetch(`/admin/products/${productId}`, {
                                method: 'DELETE'
                            });
                            const data = await response.json();
                            if (data.success) {
                                Swal.fire('Deleted!', 'The product has been deleted.', 'success').then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire('Error!', 'Failed to delete product: ' + (data.message || 'Unknown error'), 'error');
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            Swal.fire('Error!', 'Failed to delete product.', 'error');
                        }
                    }
                });
            });
    
           
            document.querySelectorAll('.block').forEach(button => {
                button.addEventListener('click', async function() {
                    const productId = this.dataset.id;
                    console.log('Toggling block for product:', productId); 
    
                    if (!productId) {
                        console.error('No product ID found');
                        return;
                    }
    
                    try {
                        const response = await fetch(`/admin/products/${productId}/toggle-block`, {
                            method: 'PATCH',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });
                        const data = await response.json();
    
                        if (data.success) {
                            this.textContent = data.isBlocked ? 'Unblock' : 'Block';
                            Swal.fire({
                                title: 'Success!',
                                text: `Product has been ${data.isBlocked ? 'blocked' : 'unblocked'} successfully.`,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: 'Failed to update product status: ' + (data.message || 'Unknown error'),
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        Swal.fire({
                            title: 'Error!',
                            text: 'Failed to update product status.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                });  
            });  
    
        });
    
      
        function openModal() {
            document.getElementById('addProductModal').style.display = "block";
        }
    
        
        function editfun(name, description, brand, category, regularprice, saleprice, quantity,images) {
            document.getElementById('EditProductModal').style.display = "block";
            document.getElementById('productname').value = name;
            document.getElementById('productdescribtion').value = description;
            document.getElementById('productbrand').value =brand;
            document.getElementById('productcategory').value=category;
            document.getElementById('productRegulatPrice').value=regularprice;
            document.getElementById('productSalePrice').value=saleprice;
            document.getElementById('productQuantity').value=quantity;
            

            document.getElementById('EditProductForm').productDescription.value = description;
        }
        
 

  function closeModal() {
    document.getElementById('EditProductModal').style.display = 'none';
  }

  function closeModall() {
    document.getElementById('addProductForm').style.display = 'none';
  }
 
    </script>
    </body>
    </html>
    
</body>
</html>