<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <!-- Payment gateway script -->
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        /* Base styles and reset */
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f8f9fa;
            color: #333;
        }
        
        /* Main container */
        .container {
            width: 90%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        /* Checkout header */
        .checkout-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 20px;
            background: #fff;
            font-size: 24px;
            font-weight: 600;
            color: #333;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            margin-bottom: 20px;
        }
        
        /* Main checkout sections layout */
        .checkout-section {
            display: flex;
            flex-direction: row;
            gap: 20px;
            margin-top: 20px;
        }
        
        /* Left and right section common styles */
        .left-section, .right-section {
            background: white;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
        }
        
        .left-section {
            flex: 3;
        }
        
        .right-section {
            flex: 2;
        }
        
        /* Section titles */
        .section-title {
            font-size: 20px;
            font-weight: 600;
            color: #2563eb; /* Modern blue */
            margin: 25px 0 15px 0;
            padding-bottom: 10px;
            border-bottom: 2px solid #f0f0f0;
            display: flex;
            align-items: center;
        }
        
        .section-title i {
            margin-right: 10px;
        }
        
        /* Button styles */
        .button {
            width: 100%;
            padding: 12px 15px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.12);
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 8px;
        }
        
        .primary-btn {
            background-color: #2563eb;
            color: white;
            border: none;
        }
        
        .primary-btn:hover {
            background-color: #1d4ed8;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(37, 99, 235, 0.25);
        }
        
        .secondary-btn {
            background: white;
            color: #333;
            border: 2px solid #e5e7eb;
        }
        
        .secondary-btn:hover {
            background: #f8f9fa;
            border-color: #d1d5db;
            transform: translateY(-2px);
        }
        
        /* Address section styles */
        .static-address {
            margin: 15px 0;
            padding: 15px;
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            transition: all 0.3s ease;
            cursor: pointer;
        }
        
        .static-address:hover {
            border-color: #2563eb;
            box-shadow: 0 2px 8px rgba(37, 99, 235, 0.15);
            transform: translateY(-2px);
        }
        
        .static-address input[type="radio"] {
            margin-right: 10px;
            transform: scale(1.2);
            cursor: pointer;
        }
        
        .static-address label {
            display: flex;
            flex-direction: column;
            gap: 5px;
            cursor: pointer;
        }
        
        .static-address label p {
            margin: 2px 0;
        }
        
        .static-address label p:first-child {
            font-size: 18px;
            font-weight: 600;
            color: #2563eb;
        }
        
        /* Selected address style */
        .static-address input[type="radio"]:checked + label {
            font-weight: 500;
        }
        
        .static-address input[type="radio"]:checked + label p:first-child {
            color: #2563eb;
        }
        
        .static-address input[type="radio"]:checked ~ .static-address {
            border-color: #2563eb;
            background-color: #f0f7ff;
        }
        
        /* Payment method styles */
        .payment-method {
            display: flex;
            flex-direction: column;
            gap: 15px;
            margin-top: 15px;
        }
        
        .payment-option {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 15px;
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            transition: all 0.3s ease;
            cursor: pointer;
        }
        
        .payment-option:hover {
            border-color: #2563eb;
            box-shadow: 0 2px 8px rgba(37, 99, 235, 0.15);
            transform: translateY(-2px);
        }
        
        .payment-option input[type="radio"] {
            transform: scale(1.2);
            cursor: pointer;
        }
        
        /* Selected payment style */
        .payment-option input[type="radio"]:checked ~ .payment-option {
            border-color: #2563eb;
            background-color: #f0f7ff;
        }
        
        /* Order summary styles */
        .order-summary {
            background: #ffffff;
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
        }
        
        .order-item {
            display: flex;
            align-items: center;
            gap: 15px;
            border-bottom: 1px solid #e5e7eb;
            padding-bottom: 15px;
            margin-bottom: 15px;
        }
        
        .order-item img {
            width: 70px;
            height: 70px;
            border-radius: 8px;
            object-fit: cover;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        
        .order-item-details {
            flex: 1;
        }
        
        .order-item p {
            font-size: 14px;
            margin: 4px 0;
        }
        
        .price {
            font-size: 18px;
            font-weight: 600;
            color: #333;
        }
        
        .discount {
            color: #10b981;
            font-size: 14px;
            font-weight: 600;
        }
        
        /* Price summary section */
        .price-summary {
            margin-top: 20px;
            padding-top: 15px;
            border-top: 1px dashed #e5e7eb;
        }
        
        .price-row {
            display: flex;
            justify-content: space-between;
            margin: 8px 0;
            font-size: 15px;
        }
        
        .total-price {
            font-size: 20px;
            font-weight: 700;
            margin-top: 15px;
            padding-top: 15px;
            border-top: 2px solid #e5e7eb;
            display: flex;
            justify-content: space-between;
        }
        
        /* Coupon section */
        .coupon-section {
            margin: 20px 0;
            padding: 15px;
            border: 1px dashed #e5e7eb;
            border-radius: 8px;
            background-color: #f9fafb;
            transition: all 0.3s ease;
        }
        
        .coupon-section:hover {
            border-color: #2563eb;
            background-color: #f0f7ff;
        }
        
        .coupon-input {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }
        
        .coupon-input input {
            flex: 1;
            padding: 10px 15px;
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            font-size: 14px;
            transition: all 0.3s ease;
        }
        
        .coupon-input input:focus {
            outline: none;
            border-color: #2563eb;
            box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.2);
        }
        
        .apply-btn {
            padding: 10px 15px;
            background-color: #2563eb;
            color: white;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .apply-btn:hover {
            background-color: #1d4ed8;
        }
        
        .applied-coupon {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 10px;
            background-color: #ecfdf5;
            border: 1px solid #10b981;
            border-radius: 8px;
            margin-top: 10px;
        }
        
        .applied-coupon .coupon-code {
            font-weight: 600;
            color: #10b981;
        }
        
        .applied-coupon .remove-coupon {
            color: #ef4444;
            cursor: pointer;
            font-size: 18px;
        }
        
        /* Button container */
        .button-container {
            margin-top: 20px;
            display: flex;
            flex-direction: column;
            gap: 12px;
        }
        
        /* Responsive design */
        @media (max-width: 992px) {
            .container {
                width: 95%;
                margin-left: auto;
                margin-right: auto;
                padding: 15px;
            }
            
            .checkout-section {
                flex-direction: column;
            }
            
            .left-section, .right-section {
                width: 100%;
            }
        }
        
        @media (max-width: 768px) {
            .checkout-header {
                font-size: 20px;
                padding: 12px 15px;
            }
            
            .section-title {
                font-size: 18px;
            }
            
            .static-address label p:first-child {
                font-size: 16px;
            }
            
            .order-item img {
                width: 60px;
                height: 60px;
            }
        }
        
        @media (max-width: 576px) {
            .container {
                width: 100%;
                padding: 10px;
            }
            
            .left-section, .right-section {
                padding: 15px;
            }
            
            .static-address, .payment-option {
                padding: 10px;
            }
            
            .button {
                padding: 10px;
                font-size: 14px;
            }
        }
    </style>
</head>
<body>
    <%- include("partials/profileHeader.ejs") %>
    
    <!-- Checkout header -->
    <div class="checkout-header">
        <span><i class="fas fa-shopping-cart"></i> Checkout</span>
    </div>
    
    <div class="container">
        <div class="checkout-section">
            <!-- Left section - Address and Payment -->
            <div class="left-section">
                <!-- Shipping Address Section -->
                <div class="section-title">
                    <i class="fas fa-map-marker-alt"></i> Shipping Address
                </div>
                
                <!-- Add Address Button -->
                <a href="addAddress">
                    <button class="button primary-btn">
                        <i class="fas fa-plus"></i> Add New Address
                    </button>
                </a>
                
                <!-- Address List -->
                <% Adress.address.forEach((element, index) => { %>
                    <div class="static-address">
                        <input type="radio" name="selectedAddress" value="<%= element._id %>" id="address-<%= index %>">
                        <label for="address-<%= index %>">
                            <p><%= element.name %></p>
                            <p><i class="fas fa-tag"></i> <%= element.addressType %></p>
                            <p><i class="fas fa-city"></i> <%= element.city %></p>
                            <p><i class="fas fa-landmark"></i> <%= element.landMark %></p>
                            <p><i class="fas fa-map-pin"></i> <%= element.pincode %></p>
                            <p><i class="fas fa-phone"></i> <%= element.phone %></p>
                        </label>
                    </div>
                <% }) %>
                
                <!-- Payment Method Section -->
                <div class="section-title">
                    <i class="fas fa-credit-card"></i> Payment Method
                </div>
                
                <!-- Payment Options -->
                <div class="payment-method">
                    <label class="payment-option">
                        <input type="radio" name="payment" value="cod">
                        <i class="fas fa-money-bill-wave"></i> Cash On Delivery
                    </label>
                    <label class="payment-option">
                        <input type="radio" name="payment" value="wallet">
                        <i class="fas fa-wallet"></i> Wallet
                    </label>
                    <label class="payment-option">
                        <input type="radio" name="payment" value="razorpay">
                        <i class="fas fa-credit-card"></i> Razorpay
                    </label>
                </div>
            </div>
            
            <!-- Right section - Order Summary -->
            <div class="right-section">
                <% carts.forEach(element => { %>
                    <div class="order-summary">
                        <!-- Order Summary Title -->
                        <div class="section-title">
                            <i class="fas fa-shopping-basket"></i> Order Summary
                        </div>
                        
                        <!-- Order Items -->
                        <div class="order-item">
                            
                            <img src="<%= element.productDetails[0].images[0] %>" alt="Product Image">
                            <div class="order-item-details">
                                <p><strong><%= element.productDetails[0].name %></strong></p>
                                <p class="price">₹<%= element.variantDetails[0].price %></p>
                                <p><i class="fas fa-box"></i> Qty: <%= element.quantity %></p>
                            </div>
                        </div>
                        
                        <!-- Coupon Section -->
                        <div class="coupon-section">
                            <div class="section-title" style="margin-top: 0; border-bottom: none;">
                                <i class="fas fa-tag"></i> Apply Coupon
                            </div>
                            <div class="coupon-input">
                                <input type="text" id="couponCode" placeholder="Enter coupon code">
                                <button class="apply-btn" id="applyCoupon">Apply</button>
                            </div>
                            
                            <!-- This will show when a coupon is applied (hidden by default) -->
                            <div class="applied-coupon" id="appliedCoupon" style="display: none;">
                                <span class="coupon-code">WELCOME20</span>
                                <i class="fas fa-times-circle remove-coupon" id="removeCoupon"></i>
                            </div>
                        </div>
                        
                        <!-- Price Summary -->
                        <div class="price-summary">
                            <div class="price-row">
                                <span>Subtotal</span>
                                <span>₹<%= element.variantDetails[0].price * element.quantity %></span>
                            </div>
                            <div class="price-row">
                                <span>Shipping</span>
                                <span>₹0</span>
                            </div>
                            <div class="price-row" id="discountRow" style="display: none; color: #10b981;">
                                <span>Discount</span>
                                <span>-₹<span id="discountAmount">0</span></span>
                            </div>
                            
                            <div class="total-price">
                                <span>Total</span>
                                <span>₹<span id="finalPrice"><%= totalPrice %></span></span>
                            </div>
                        </div>
                        
                        <!-- Action Buttons -->
                        <div class="button-container">
                            <button class="button primary-btn" id="checkout">
                                <i class="fas fa-lock"></i> Proceed to Checkout
                            </button>
                            <a href="/user/ProductsDetails">
                                <button class="button secondary-btn">
                                    <i class="fas fa-arrow-left"></i> Continue Shopping
                                </button>
                            </a>
                        </div>
                    </div>
                <% }) %>
            </div>
        </div>
    </div>

    <!-- Sweet Alert Library for notifications -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // Original price for calculations
        let originalPrice = <%= typeof totalPrice !== 'undefined' ? totalPrice : 0 %>;
        let finalPrice = originalPrice;
        let appliedCoupon = null;
        
        // Coupon functionality
        document.getElementById("applyCoupon").addEventListener("click", function() {
            const couponCode = document.getElementById("couponCode").value.trim();
            
            if (!couponCode) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Empty Coupon',
                    text: 'Please enter a coupon code',
                });
                return;
            }
            
            // Simulated coupon validation (replace with actual API call)
            if (couponCode === "WELCOME20") {
                // Apply 20% discount
                const discount = Math.round(originalPrice * 0.2);
                finalPrice = originalPrice - discount;
                
                // Update UI
                document.getElementById("discountAmount").textContent = discount;
                document.getElementById("discountRow").style.display = "flex";
                document.getElementById("finalPrice").textContent = finalPrice;
                
                // Show applied coupon
                document.getElementById("appliedCoupon").style.display = "flex";
                document.querySelector(".coupon-code").textContent = couponCode;
                document.getElementById("couponCode").value = "";
                
                // Store applied coupon
                appliedCoupon = {
                    code: couponCode,
                    discount: discount
                };
                
                Swal.fire({
                    icon: 'success',
                    title: 'Coupon Applied!',
                    text: `You've got a discount of ₹${discount}`,
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Coupon',
                    text: 'This coupon code is invalid or expired',
                });
            }
        });
        
        // Remove coupon functionality
        document.getElementById("removeCoupon").addEventListener("click", function() {
            // Reset price
            finalPrice = originalPrice;
            document.getElementById("finalPrice").textContent = finalPrice;
            
            // Hide discount row
            document.getElementById("discountRow").style.display = "none";
            
            // Hide applied coupon
            document.getElementById("appliedCoupon").style.display = "none";
            
            // Clear stored coupon
            appliedCoupon = null;
            
            Swal.fire({
                icon: 'info',
                title: 'Coupon Removed',
                text: 'Discount has been removed',
            });
        });

        // Checkout button event listener
        document.getElementById("checkout").addEventListener("click", async (event) => {
            event.preventDefault();

            // Validate address selection
            let selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
            if (!selectedAddress) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Address Required',
                    text: 'Please select a shipping address',
                });
                return;
            }

            // Validate payment method selection
            let selectedPayment = document.querySelector('input[name="payment"]:checked');
            if (!selectedPayment) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Payment Method Required',
                    text: 'Please select a payment method',
                });
                return;
            }

            // Collect cart items from server data
            let cartItems = <%- JSON.stringify((carts || []).map(element => ({
                product: element?.productDetails?.[0]?._id || "",
                quantity: element?.quantity || 0,
                price: element?.variantDetails?.[0]?.price || 0
            }))) %>;

            // Data to send to the server
            let orderData = {
                orderItems: cartItems,
                totalPrice: finalPrice, // Use final price after coupon
                address: selectedAddress.value,
                paymentMethod: selectedPayment.value,
                coupon: appliedCoupon // Include coupon information if applied
            };

            try {
                // Send order data to the server
                let response = await fetch("/user/placeOrder", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(orderData)
                });
                let result = await response.json();

                if (response.ok) {
                    // Handle different payment methods
                    if (selectedPayment.value === 'razorpay') {
                        // Initialize Razorpay payment
                        const options = {
                            key: result.key,
                            amount: result.amount,
                            currency: result.currency,
                            order_id: result.orderId,
                            name: "Your Company Name",
                            description: "Purchase Description",
                            handler: async function (response) {
                                // Handle successful payment
                                const paymentResponse = await fetch("/user/verifyPayment", {
                                    method: "POST",
                                    headers: {
                                        "Content-Type": "application/json"
                                    },
                                    body: JSON.stringify({
                                        razorpayOrderId: result.orderId,
                                        razorpayPaymentId: response.razorpay_payment_id,
                                        razorpaySignature: response.razorpay_signature
                                    })
                                });

                                const paymentResult = await paymentResponse.json();

                                if (paymentResponse.ok) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Payment Successful!',
                                        text: 'Your order has been placed successfully.',
                                        confirmButtonText: 'OK'
                                    }).then(() => {
                                        window.location.href = "/user/profile";
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Payment Failed!',
                                        text: paymentResult.message,
                                        confirmButtonText: 'Try Again'
                                    });
                                }
                            },
                            prefill: {
                                name: "Customer Name",
                                email: "customer@example.com",
                                contact: "9999999999"
                            },
                            theme: {
                                color: "#2563eb" // Match the site theme
                            }
                        };

                        const rzp = new Razorpay(options);
                        rzp.open();
                    } else {
                        // For COD and wallet payments
                        Swal.fire({
                            icon: 'success',
                            title: 'Order Placed!',
                            text: 'Your order has been placed successfully.',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            window.location.href = "/user/profile";
                        });
                    }
                } else {
                    // Handle order failure
                    Swal.fire({
                        icon: 'error',
                        title: 'Order Failed!',
                        text: "Error: " + result.message,
                        confirmButtonText: 'Try Again'
                    });
                }
            } catch (error) {
                console.error("Error placing order:", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Something Went Wrong',
                    text: 'Please try again later',
                });
            }
        });

        // Add some visual feedback for address and payment selection
        document.querySelectorAll('.static-address input[type="radio"]').forEach(radio => {
            radio.addEventListener('change', function() {
                document.querySelectorAll('.static-address').forEach(addr => {
                    addr.style.borderColor = '#e5e7eb';
                    addr.style.backgroundColor = '#ffffff';
                });
                
                this.closest('.static-address').style.borderColor = '#2563eb';
                this.closest('.static-address').style.backgroundColor = '#f0f7ff';
            });
        });
        
        document.querySelectorAll('.payment-option input[type="radio"]').forEach(radio => {
            radio.addEventListener('change', function() {
                document.querySelectorAll('.payment-option').forEach(option => {
                    option.style.borderColor = '#e5e7eb';
                    option.style.backgroundColor = '#ffffff';
                });
                
                this.closest('.payment-option').style.borderColor = '#2563eb';
                this.closest('.payment-option').style.backgroundColor = '#f0f7ff';
            });
        });
    </script>
</body>
</html>