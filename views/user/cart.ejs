<%- include("partials/profileHeader.ejs") %>
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8fdf9;
            margin: 0;
            padding: 20px;
        }

        .cart-container {
            width: 60%;
            margin: auto;
        }

        h2 {
            text-align: left;
        }

        .cart-items {
            background: white;
            padding: 20px;
            border-radius: 10px;
        }

        .cart-item {
            display: flex;
            align-items: center;
            background: #fff;
            padding: 15px;
            margin-bottom: 15px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .cart-item img {
            width: 80px;
            height: 80px;
            border-radius: 5px;
            margin-right: 15px;
        }

        .item-details {
            flex: 1;
        }

        .item-details h3 {
            margin: 0;
            font-size: 18px;
        }

        .item-details p {
            margin: 5px 0;
            color: gray;
        }

        .price {
            font-size: 18px;
            color: black;
        }

        .quantity {
            display: flex;
            align-items: center;
        }

        .quantity button {
            padding: 5px 10px;
            border: none;
            background: lightgray;
            cursor: pointer;
            font-size: 16px;
        }

        .quantity input {
            width: 30px;
            text-align: center;
            border: none;
            font-size: 16px;
            margin: 0 5px;
        }

        .remove-btn {
            background: red;
            color: white;
            border: none;
            padding: 8px 12px;
            cursor: pointer;
            border-radius: 5px;
        }

        .price-details {
            background: white;
            padding: 15px;
            border-radius: 10px;
            margin-top: 20px;
        }

        .price-details p {
            font-size: 16px;
            display: flex;
            justify-content: space-between;
        }

        .total-price {
            color: blue;
            font-weight: bold;
        }

        .checkout-btn, .back-btn {
            width: 100%;
            padding: 10px;
            border: none;
            font-size: 16px;
            margin-top: 10px;
            cursor: pointer;
        }

        .checkout-btn {
            background: black;
            color: white;
        }

        .back-btn {
            background: white;
            border: 1px solid black;
            color: black;
        }
    </style>
</head>
<body>
    <div class="cart-container">
        <h2>Your Cart</h2>
        
        <div class="cart-items">
            <% Cart.forEach(element => { %>
                <div class="cart-item">
                    <img src="<%= element.productDetails[0].images[0] %>" alt="Silverton Watch">
                    <div class="item-details">
                        <h3><%= element.productDetails[0].name %></h3>
                        <p><%= element.categoryDetails[0].name %> | <%= element.brandDetails[0].brandName %> </p>
                        <p class="price" value="<%= element.price  %>"><%= element.price%></p>
                        <p class="availablePrice">Available Stock: <%= element.productDetails[0].quantity%> </p>
                    </div>
                    <div class="quantity">
                        <button class="decrement">-</button>
                        <input class="stocks" type="text" value="<%= element.quantity %>">
                        <input  type="hidden" value="<%= element.productDetails[0].quantity %>" class="availableQty">
                        <button class="increment">+</button>
                    </div>
                    <button class="remove-btn" onclick="deletecart('<%= element._id %>')">Remove</button>

                   

                </div>
            <% }) %>
          


           
        </div>

        <div class="price-details">

            <h3>PRICE DETAILS</h3>
            
            <p>Total: <span class="total-price" id="total"></span></p>
           <a href="checkout"> <button class="checkout-btn">Proceed To Checkout</button></a>
        </div>

       <a href="ProductsDetails"> <button class="back-btn">Go Back to Shopping</button></a>
    </div>
</body>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
 
    
    
    document.querySelectorAll('.increment').forEach((button,index)=>{
        button.addEventListener('click', () => {
        const value= document.querySelectorAll('.stocks')[index].value
        var maxQty=document.querySelectorAll('.availableQty')[index].value;
   
        if(document.querySelectorAll('.stocks')[index].value >= maxQty){
          
            Swal.fire({
                title: "Not Possible!",
                text: "Quantity Not Increased upto Available Quantity",
                icon: "warning",
                confirmButtonText: "OK"
});
        }else{
            let sum=0;
            const priceElements = document.querySelectorAll('.price');
            document.querySelectorAll('.stocks')[index].value++
            const quantityElements = document.querySelectorAll('.stocks');
            for (let i = 0; i < totalData.length; i++) {  
                let price = parseFloat(priceElements[i].textContent.trim()); 
                let quantity = parseInt(quantityElements[i].value); 
                sum += quantity * price;
                }  
            document.getElementById('total').innerText=sum

        }
       
    
    });
})
document.querySelectorAll('.decrement').forEach((button,index)=>{
        button.addEventListener('click', () => {
        if( document.querySelectorAll('.stocks')[index].value <= 1){
            Swal.fire({
                title: "Not Possible!",
                text: "Quantity Not Possible less that 1",
                icon: "warning",
                confirmButtonText: "OK"
});
        }else{
            let sum=0;
            const priceElements = document.querySelectorAll('.price');  
           
            document.querySelectorAll('.stocks')[index].value--
            const quantityElements = document.querySelectorAll('.stocks');
            for (let i = 0; i < totalData.length; i++) {  
                let price = parseFloat(priceElements[i].textContent.trim()); 
                let quantity = parseInt(quantityElements[i].value); 
                sum += quantity * price;
                }  
            document.getElementById('total').innerText=sum
        }
    
    });
})

const totalData = document.querySelectorAll(".decrement");  
const priceElements = document.querySelectorAll('.price');  
const quantityElements = document.querySelectorAll('.stocks');  

let sum = 0;

for (let i = 0; i < totalData.length; i++) {  
    let price = parseFloat(priceElements[i].textContent.trim()); 
    let quantity = parseInt(quantityElements[i].value); 
    sum += quantity * price;
}  

document.getElementById('total').innerText = sum.toFixed(2); 

async function deletecart(cartId) {
    const result = await Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#0653cc',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
    });

    if (result.isConfirmed) {
        try {
            const response = await fetch('/user/Cart/remove', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ id: cartId }),
            });

            if (!response.ok) {
                let errorMessage = 'Failed to remove cart';
                try {
                    const data = await response.json();
                    if (data.error) errorMessage = data.error;
                } catch (err) {
                    console.error('Error parsing response:', err);
                }
                await Swal.fire({
                    title: 'Error!',
                    text: errorMessage,
                    icon: 'error',
                    confirmButtonColor: '#0653cc'
                });
                return;
            }

            await Swal.fire({
                title: 'Deleted!',
                text: 'Cart has been removed.',
                icon: 'success',
                confirmButtonColor: '#0653cc'
            });
            window.location.reload();

        } catch (error) {
            console.error('Fetch error:', error);
            await Swal.fire({
                title: 'Error!',
                text: 'An error occurred',
                icon: 'error',
                confirmButtonColor: '#0653cc'
            });
        }
    }
}


</script>
</html>
