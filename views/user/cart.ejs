<%- include("partials/profileHeader.ejs") %>
    <title>Shopping Cart</title>
    <style>
        body {
            font-family: 'Poppins', Arial, sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
        }
        .cart-container {
            max-width: 1000px;
            margin: 30px auto;
            background: white;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
            border-radius: 15px;
            width: 90%;
            transition: all 0.3s ease;
        }
        .cart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-bottom: 15px;
            border-bottom: 2px solid #eaeaea;
            margin-bottom: 10px;
        }
        .cart-header h2 {
            font-size: 1.8rem;
            color: #333;
            font-weight: 600;
            margin: 0;
        }
        .clear-btn {
            background-color: #ff4d4d;
            color: white;
            border: none;
            padding: 10px 16px;
            border-radius: 8px;
            cursor: pointer;
            transition: 0.3s;
            font-weight: 500;
        }
        .clear-btn:hover {
            background-color: #e04141;
            transform: translateY(-2px);
        }
        .cart-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 20px 0;
            border-bottom: 1px solid #eaeaea;
            transition: all 0.3s ease;
        }
        .cart-item:hover {
            background-color: #f9f9f9;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }
        .cart-item img {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }
        .cart-item img:hover {
            transform: scale(1.05);
        }
        .cart-item .info {
            flex: 1;
            padding: 0 20px;
        }
        .cart-item .info h3 {
            margin: 0 0 8px 0;
            color: #333;
            font-size: 1.2rem;
        }
        .cart-item .info p {
            margin: 5px 0;
            color: #666;
            font-size: 0.95rem;
        }
        .price {
            font-weight: 600;
            color: #333;
        }
        .quantity {
            display: flex;
            align-items: center;
            background-color: #f5f5f5;
            border-radius: 8px;
            padding: 5px;
            margin-right: 15px;
        }
        .quantity button {
            background: #4a6cfa;
            border: none;
            color: white;
            width: 30px;
            height: 30px;
            border-radius: 5px;
            cursor: pointer;
            transition: 0.3s;
            font-size: 1.2rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .quantity button:hover {
            background: #3957d8;
            transform: scale(1.05);
        }
        .quantity span {
            margin: 0 15px;
            font-weight: 600;
            color: #333;
            min-width: 25px;
            text-align: center;
        }
        .remove-btn {
            background-color: #ff4d4d;
            border: none;
            color: white;
            padding: 8px 15px;
            border-radius: 8px;
            cursor: pointer;
            transition: 0.3s;
            margin-left: 10px;
            font-weight: 500;
        }
        .remove-btn:hover {
            background-color: #e04141;
            transform: translateY(-2px);
        }
        .summary {
            background: #f9f9f9;
            padding: 20px;
            border-radius: 12px;
            margin-top: 25px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }
        .summary:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
        }
        .checkout-btn {
            width: 100%;
            background: linear-gradient(135deg, #28a745, #218838);
            color: white;
            padding: 12px 15px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: 0.3s;
            font-size: 1.1rem;
            font-weight: 600;
            letter-spacing: 0.5px;
        }
        .checkout-btn:hover {
            background: linear-gradient(135deg, #218838, #1e7e34);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(40, 167, 69, 0.4);
        }
        .checkout-btn:disabled {
            background: #cccccc;
            cursor: not-allowed;
            box-shadow: none;
            transform: none;
        }
        .empty-cart {
            text-align: center;
            padding: 30px 0;
            color: #888;
        }
        
        /* Responsive Design */
        @media (max-width: 768px) {
            .cart-container {
                width: 95%;
                padding: 15px;
                margin: 15px auto;
            }
            .cart-header h2 {
                font-size: 1.5rem;
            }
            .cart-item {
                flex-direction: column;
                text-align: center;
                padding: 15px 0;
            }
            .cart-item img {
                margin-bottom: 15px;
            }
            .cart-item .info {
                padding: 0 0 15px 0;
                width: 100%;
            }
            .quantity {
                margin: 0 0 15px 0;
                justify-content: center;
            }
            .actions {
                display: flex;
                flex-direction: column;
                align-items: center;
                width: 100%;
            }
            .remove-btn {
                margin: 10px 0 0 0;
                width: 100%;
            }
        }
        
        @media (min-width: 769px) and (max-width: 992px) {
            .cart-container {
                width: 90%;
            }
            .cart-item {
                flex-wrap: wrap;
            }
            .cart-item .info {
                width: calc(100% - 120px);
            }
            .quantity-remove {
                display: flex;
                width: 100%;
                justify-content: flex-end;
                margin-top: 15px;
                align-items: center;
            }
        }
    </style>
</head>
<body>
    <div class="cart-container">
        <div class="cart-header">
            <h2>Your Shopping Cart</h2>
        </div>
        
        <% if (carts.length > 0) { %>
            <% carts.forEach(element => { %>
                <div class="cart-item">
                    <img src="<%=element.productDetails[0].images[0] %>" alt="<%= element.productDetails[0].name %>">
                    <div class="info">
                        <h3><%= element.productDetails[0].name %></h3>
                        <p>Type: <%= element.variantDetails[0].ramSize %></p> 
                        <p>Stock: <%= element.variantDetails[0].quantity %></p>
                        <p class="price">â‚¹<%= element.price %> <span style="color: green;"></span></p>
                    </div>
                    
                    <div class="quantity-remove">
                        <div class="quantity">
                            <button onclick="decreaseQuantity('<%=element._id%>', '<%= element.price %>')">-</button>
                            <span id="quantity-<%=element._id%>"><%= element.quantity %></span>
                            <button onclick="updateQuantity('<%=element._id%>', '<%= element.price %>', '<%= element.variantDetails[0].quantity %>')">+</button>
                        </div>
                        <button class="remove-btn" onclick="deleteCart('<%=element._id %>')">Remove</button>
                    </div>
                </div>
            <% }) %>
        <% } else { %>
            <div class="empty-cart">
                <p>Your cart is empty</p>
            </div>
        <% } %>
        
        <div class="summary">
            <% if (carts.length > 0) { %>
                <a href="/user/checkout"><button class="checkout-btn">Proceed to Checkout</button></a> 
            <% } else { %>
                <a href="/user/checkout"><button class="checkout-btn" disabled>Checkout</button></a> 
            <% } %>
        </div>
    </div>
    
    <!-- SweetAlert2 CDN -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
       async function deleteCart(CartId) {
    const result = await Swal.fire({
        title: 'Remove Item?',
        text: "This item will be removed from your cart",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#4a6cfa',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, remove it!'
    });

    if (result.isConfirmed) {
        try {
            const response = await fetch('/user/cart-delete', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ id: CartId }),
            });

            if (response.ok) {
                showToast('Item has been removed from your cart.', 'success');
                setTimeout(() => {
                    window.location.reload();
                }, 1000); // Delay for better UX
            } else {
                const data = await response.json();
                showToast(data.error || 'Failed to remove item', 'error');
            }
        } catch (error) {
            showToast('An error occurred', 'error');
        }
    }
}


function showToast(message, icon = "info") {
    Swal.fire({
        toast: true,
        position: "top-end",
        icon: icon,
        title: message,
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true,
    });
}


        function updateQuantity(elementId, price, maxQuantity) {
            let quantitySpan = document.getElementById(`quantity-${elementId}`);
            let totalPriceSpan = document.getElementById(`total-price`);
            let currentQuantity = parseInt(quantitySpan.innerText);
            let newQuantity = currentQuantity + 1; 
            
            if (newQuantity > maxQuantity) {
                Swal.fire({
                    icon: "warning",
                    title: "Stock limit reached!",
                    text: "You cannot add more of this item.",
                    confirmButtonColor: '#4a6cfa'
                });
                return;
            }

            quantitySpan.innerText = newQuantity;

            
            if (totalPriceSpan) {
                let totalPrice = parseFloat(totalPriceSpan.innerText.replace("â‚¹", "").trim());
                totalPrice += parseFloat(price);
                totalPriceSpan.innerText = `â‚¹${totalPrice.toFixed(2)}`;
            }

            fetch(`/update-cart`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    cartId: elementId,
                    newQuantity: newQuantity
                }),
            })
            .then(response => response.json())
            .then(data => {
                console.log("Updated successfully", data);
            })
            .catch(error => {
                console.error("Error updating quantity:", error);
            });
        }

        function decreaseQuantity(elementId, price) {
            let quantitySpan = document.getElementById(`quantity-${elementId}`);
            let totalPriceSpan = document.getElementById(`total-price`);
            let currentQuantity = parseInt(quantitySpan.innerText);
            
            if (currentQuantity <= 1) return; 
            
            let newQuantity = currentQuantity - 1;
            quantitySpan.innerText = newQuantity;

            // Update total price if it exists
            if (totalPriceSpan) {
                let totalPrice = parseFloat(totalPriceSpan.innerText.replace("â‚¹", "").trim());
                totalPrice -= parseFloat(price);
                totalPriceSpan.innerText = `â‚¹${totalPrice.toFixed(2)}`;
            }

            fetch(`/update-cart`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    cartId: elementId,
                    newQuantity: newQuantity
                }),
            })
            .then(response => response.json())
            .then(data => {
                console.log("Updated successfully", data);
            })
            .catch(error => {
                console.error("Error updating quantity:", error);
            });
        }
    </script>
</body>
</html>