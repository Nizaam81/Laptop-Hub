
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<link rel="stylesheet" href="/styles.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<%- include('partials/header') %>
<%- include('partials/head') %>
<style>
    body {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        overflow-x: hidden;
    }

  
    .filter-sidebar {
        position: fixed;
        top: 0;
        left: -300px;
        width: 300px;
        height: 100vh;
        background: #fff;
        z-index: 1050;
        padding: 1.5rem;
        overflow-y: auto;
        transition: left 0.3s ease;
        box-shadow: 2px 0 10px rgba(0,0,0,0.1);
    }

    .filter-sidebar.open {
        left: 0;
    }

    .filter-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0,0,0,0.5);
        z-index: 1040;
        display: none;
    }

    .filter-box {
        background: #f8f9fa;
        border-radius: 10px;
        padding: 1.5rem;
    }

    .wishlist {
        font-size: 1.25rem;
        color: #6c757d;
        cursor: pointer;
        transition: color 0.2s ease;
    }

    .wishlist.active {
        color: #dc3545;
    }

    .card {
        transition: transform 0.2s, box-shadow 0.2s;
        border: none;
        border-radius: 10px;
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 16px rgba(0,0,0,0.1);
    }

    footer {
        margin-top: auto;
        background: #f8f9fa;
        padding: 1.5rem 0;
    }

    .form-check-input:checked {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }

    .object-fit-cover {
        object-fit: cover;
    }
.pagination {
  margin-top: 2rem;
  gap: 5px;
}

.page-item .page-link {
  border-radius: 50%;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #555;
  border: 1px solid #dee2e6;
  font-weight: 500;
  transition: all 0.2s ease;
}


.page-item.active .page-link {
  background-color: #0d6efd;
  border-color: #0d6efd;
  color: white;
  box-shadow: 0 2px 5px rgba(13, 110, 253, 0.3);
}


.page-item:first-child .page-link,
.page-item:last-child .page-link {
  border-radius: 20px;
  width: auto;
  padding-left: 15px;
  padding-right: 15px;
}


.page-link:hover {
  background-color: #f8f9fa;
  color: #0d6efd;
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  z-index: 2;
}

.page-item.active .page-link:hover {
  background-color: #0b5ed7;
  color: white;
}


.page-item.disabled .page-link {
  color: #bbb;
  background-color: #f8f9fa;
  border-color: #dee2e6;
  cursor: not-allowed;
}

@media (max-width: 576px) {
  .page-item .page-link {
    width: 35px;
    height: 35px;
    font-size: 0.9rem;
  }
  
  .page-item:first-child .page-link,
  .page-item:last-child .page-link {
    font-size: 0.85rem;
    padding-left: 10px;
    padding-right: 10px;
  }
}
</style>

<div class="container mt-4 flex-grow-1">
    <div class="d-flex justify-content-between align-items-center mb-3 flex-wrap gap-2">
        <button class="btn btn-dark d-flex align-items-center" id="filterToggleBtn">
            <i class="fas fa-filter me-2"></i> Filter Products
        </button>
        <div class="input-group search-bar" style="width: 300px;">
            <input type="text" class="form-control" placeholder="Search for products...">
            <button class="btn btn-outline-secondary"><i class="fas fa-search"></i></button>
        </div>
        <div class="d-flex align-items-center gap-2">
            <span class="me-2">Sort By:</span>
            <select class="form-select w-auto" id="data" onchange="sorting()">
                <option value="all">Default</option>
                <option value="atoZ">Aa-Zz</option>
                <option value="ztoA">Zz-Aa</option>
                <option value="ltoH">Price: Low to High</option>
                <option value="htoL">Price: High to Low</option>
            </select>
        </div>
    </div>

    <!-- Filter Sidebar -->
  <!-- Filter Sidebar -->
<div class="filter-sidebar" id="filterSidebar">
  <div class="filter-header d-flex justify-content-between align-items-center mb-3">
    <h5 class="m-0 fw-bold">Filters</h5>
    <button class="btn-close" id="closeFilterBtn"></button>
  </div>
  
  <form action="/user/productsDetails" method="GET" id="filterForm">
    <!-- Keep current sorting and page -->
    <input type="hidden" name="value" value="<%= value %>">
    
    <div class="filter-box">
      <!-- Categories Filter -->
      <h5 class="fw-bold mb-3">Categories</h5>
      <div class="mb-4">
        <% catagories.forEach(element => { %>
          <div class="form-check">
            <input class="form-check-input" type="checkbox" name="categories" 
                   value="<%= element._id %>" id="category-<%= element._id %>"
                   <%= selectedCategories && selectedCategories.includes(element._id.toString()) ? 'checked' : '' %>>
            <label class="form-check-label" for="category-<%= element._id %>"><%= element.name %></label>
          </div>
        <% }) %>
      </div>

      <hr class="my-3">

      <!-- Brands Filter -->
      <h5 class="fw-bold mb-3">Brands</h5>
      <div class="mb-4">
        <% brands.forEach(element => { %>
          <div class="form-check">
            <input class="form-check-input" type="checkbox" name="brands" 
                   value="<%= element._id %>" id="brand-<%= element._id %>"
                   <%= selectedBrands && selectedBrands.includes(element._id.toString()) ? 'checked' : '' %>>
            <label class="form-check-label" for="brand-<%= element._id %>"><%= element.brandName %></label>
          </div>
        <% }) %>
      </div>
      
      <div class="d-flex gap-2">
        <button type="submit" class="btn btn-primary w-100">Apply Filters</button>
        <button type="button" class="btn btn-secondary w-100" id="clearFiltersBtn">Clear</button>
      </div>
    </div>
  </form>
</div>
    
</div>


    
    <div class="filter-overlay" id="filterOverlay"></div>

    <div class="row">
        
        <div class="col-md-12">
            <div class="row">
                <% Products.forEach(product => { %>
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card h-100 position-relative shadow-sm">
                        <div class="wishlist-container position-absolute top-0 end-0 p-2">
                            <i class="fa-heart wishlist <%= product.inWishlist ? 'fas active' : 'far' %>"
                               data-product-id="<%= product._id %>" 
                               onclick="toggleWishlist(this)"></i>
                        </div>
                        <form action="/user/productView">
                            <button class="btn border-0 w-100 p-0 h-100 d-flex flex-column">
                                <img src="<%= product.productDetails[0].images[0] %>" 
                                     class="card-img-top flex-grow-1 object-fit-cover"
                                     style="height: 200px; border-radius: 8px 8px 0 0;"
                                     alt="Product Image">
                                <div class="card-body text-center">
                                    <input type="hidden" value="<%= product.productDetails[0]._id %>" name="productId">
                                    <input type="hidden" value="<%= product._id %>" name="varientId">
                                    <h6 class="card-title mb-1"><%= product.productDetails[0].name %></h6>
                                    <% if (product.stock === 0) { %>
                                        <p class="text-danger fw-bold mb-1">Out of Stock</p>
                                    <% } %>
                                    <p class="text-dark fw-bold h5 mb-2">₹<%= product.price %></p>
                                    <div class="rating text-warning small">⭐ 4.5</div>
                                </div>
                            </button>
                        </form>
                    </div>
                </div>
                <% }) %>
            </div>
        </div>
    </div>

    <!-- Pagination -->
    <nav aria-label="Page navigation" class="mt-5">
        <ul class="pagination justify-content-center">
            <% if (currentPage > 1) { %>
                <li class="page-item">
                    <a class="page-link" href="?value=<%= value %>&page=<%= currentPage - 1 %>">Previous</a>
                </li>
            <% } %>

            <% for (let i = 1; i <= totalPages; i++) { %>
                <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                    <a class="page-link" href="?value=<%= value %>&page=<%= i %>"><%= i %></a>
                </li>
            <% } %>

            <% if (currentPage < totalPages) { %>
                <li class="page-item">
                    <a class="page-link" href="?value=<%= value %>&page=<%= currentPage + 1 %>">Next</a>
                </li>
            <% } %>
        </ul>
    </nav>
</div>

<%- include('partials/footer') %>


<script>
   
    document.addEventListener('DOMContentLoaded', function() {
        const filterToggleBtn = document.getElementById('filterToggleBtn');
        const closeFilterBtn = document.getElementById('closeFilterBtn');
        const filterSidebar = document.getElementById('filterSidebar');
        const filterOverlay = document.getElementById('filterOverlay');
        
        filterToggleBtn.addEventListener('click', function() {
            filterSidebar.classList.add('open');
            filterOverlay.style.display = 'block';
            document.body.style.overflow = 'hidden';
        });
        
        function closeFilter() {
            filterSidebar.classList.remove('open');
            filterOverlay.style.display = 'none';
            document.body.style.overflow = '';
        }
        
        closeFilterBtn.addEventListener('click', closeFilter);
        filterOverlay.addEventListener('click', closeFilter);
    });

    async function toggleWishlist(element) {
        const productId = element.getAttribute("data-product-id");
        
        const action = element.classList.contains("active") ? "remove" : "add";

        try {
            const response = await fetch("/user/Wishlist", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ productId, action }) 
            });

            const data = await response.json();
            
            if (data.success) {
                if (action === "add") {
                    element.classList.add("active"); 



                } else {
                    element.classList.remove("active"); 
                }
            } else {
                console.log("Error updating wishlist:", data.error);
            }
        } catch (error) { 
            console.error("Error:", error);
        }
    }

    function sorting() {
        const values=document.getElementById('data').value
        window.location.href=`/user/productsDetails?value=${values}`
    }
  
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.querySelector('.search-bar input');
        const searchButton = document.querySelector('.search-bar button');
        const productCards = document.querySelectorAll('.card');

        function performSearch() {
            const searchTerm = searchInput.value.toLowerCase().trim();
            
            productCards.forEach(card => {
                const productName = card.querySelector('.card-title').textContent.toLowerCase();
                const productContainer = card.closest('.col-lg-4, .col-md-6');
                
                if (productName.includes(searchTerm)) {
                    productContainer.style.display = '';
                } else {
                    productContainer.style.display = 'none';
                }
            });

            searchInput.value = '';
        }

        searchButton.addEventListener('click', performSearch);

        searchInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                performSearch();
            }
        });
    });
    

    document.addEventListener('DOMContentLoaded', function() {
    const filterToggleBtn = document.getElementById('filterToggleBtn');
    const closeFilterBtn = document.getElementById('closeFilterBtn');
    const filterSidebar = document.getElementById('filterSidebar');
    const filterOverlay = document.getElementById('filterOverlay');
    const clearFiltersBtn = document.getElementById('clearFiltersBtn');
    
    filterToggleBtn.addEventListener('click', function() {
        filterSidebar.classList.add('open');
        filterOverlay.style.display = 'block';
        document.body.style.overflow = 'hidden';
    });
    
    function closeFilter() {
        filterSidebar.classList.remove('open');
        filterOverlay.style.display = 'none';
        document.body.style.overflow = '';
    }
    
    closeFilterBtn.addEventListener('click', closeFilter);
    filterOverlay.addEventListener('click', closeFilter);
    
    // Clear filters button
    clearFiltersBtn.addEventListener('click', function() {
        const checkboxes = document.querySelectorAll('#filterForm input[type="checkbox"]');
        checkboxes.forEach(checkbox => {
            checkbox.checked = false;
        });
        
        // Submit the form without any filters
        document.getElementById('filterForm').submit();
    });
    
    // Update pagination links to preserve filters
    function updatePaginationLinks() {
        const paginationLinks = document.querySelectorAll('.pagination .page-link');
        const currentUrl = new URL(window.location.href);
        const urlParams = new URLSearchParams(currentUrl.search);
        
        // Get all selected categories and brands
        const selectedCategories = document.querySelectorAll('input[name="categories"]:checked');
        const selectedBrands = document.querySelectorAll('input[name="brands"]:checked');
        
        paginationLinks.forEach(link => {
            const href = new URL(link.href);
            const linkParams = new URLSearchParams(href.search);
            
            // Preserve the value parameter (sorting)
            if (urlParams.has('value')) {
                linkParams.set('value', urlParams.get('value'));
            }
            
            // Add selected categories
            selectedCategories.forEach(category => {
                linkParams.append('categories', category.value);
            });
            
            // Add selected brands
            selectedBrands.forEach(brand => {
                linkParams.append('brands', brand.value);
            });
            
            // Update the link href
            href.search = linkParams.toString();
            link.href = href.toString();
        });
    }
    
    // Call this function when the page loads
    updatePaginationLinks();
});

// Keep the existing functions
async function toggleWishlist(element) {
    const productId = element.getAttribute("data-product-id");
    
    const action = element.classList.contains("active") ? "remove" : "add";

    try {
        const response = await fetch("/user/Wishlist", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ productId, action }) 
        });

        const data = await response.json();
        
        if (data.success) {
            if (action === "add") {
                element.classList.add("active", "fas");
                element.classList.remove("far");
            } else {
                element.classList.remove("active", "fas");
                element.classList.add("far");
            }
        } else {
            console.log("Error updating wishlist:", data.error);
        }
    } catch (error) { 
        console.error("Error:", error);
    }
}

function sorting() {
    // Get current URL and parameters
    const currentUrl = new URL(window.location.href);
    const urlParams = new URLSearchParams(currentUrl.search);
    
    // Update the value parameter
    const values = document.getElementById('data').value;
    urlParams.set('value', values);
    
    // Preserve filter parameters
    const selectedCategories = document.querySelectorAll('input[name="categories"]:checked');
    const selectedBrands = document.querySelectorAll('input[name="brands"]:checked');
    
    // Clear old filter parameters
    urlParams.delete('categories');
    urlParams.delete('brands');
    
    // Add selected categories
    selectedCategories.forEach(category => {
        urlParams.append('categories', category.value);
    });
    
    // Add selected brands
    selectedBrands.forEach(brand => {
        urlParams.append('brands', brand.value);
    });
    
    // Redirect with all parameters
    window.location.href = `/user/productsDetails?${urlParams.toString()}`;
}
</script>